# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
# Test PR 

trigger:
- develop
- master

pr:
  branches:
    include:
    - master
    - develop
    exclude:
    - feature/*

variables:
  masterBranchName: 'master' 
  developmentBranchName: 'develop'

resources:
  repositories:
    - repository: templates
      type: git
      name: 'TestService/CommonYml'

stages:
    - stage: 'Build'
      displayName: 'Build the $(apiService)'
      jobs:
          - job: 'BuildDev'
            displayName: 'Build job'
            condition: eq(variables['Build.SourceBranchName'],variables['developmentBranchName'])
             
            pool:
              vmImage: 'ubuntu-latest' 
           
              
            steps:  
            - template: 'CommonBuildPipeline_dev.yml@templates'
                      

            - task: DotNetCoreCLI@2
              displayName: 'Build Web App'
              inputs:
                command: build
                projects: '**/*.csproj' 
              
            
            - task: DotNetCoreCLI@2
              displayName: 'Build the project - Release'
              inputs:
                command: 'build'
                arguments: '--no-restore --configuration Release'
                projects: '**/*.csproj'

            - task: DotNetCoreCLI@2
              displayName: 'Publish the project - Release '
              inputs:
                command: 'publish'
                projects: '**/*.csproj'
                publishWebProjects: false
                arguments: '--no-build --configuration Release --output $(Build.ArtifactStagingDirectory)/Release'
                zipAfterPublish: true

            - task: PublishBuildArtifacts@1
              displayName: 'Publish Artifact'
              inputs:
                PathtoPublish: '$(Build.ArtifactStagingDirectory)'
                ArtifactName: drop

          - job: 'BuildUAT'
            displayName: 'Build for UAT' 
            condition: |
              and
              (
                succeededOrFailed(),
                eq(variables['Build.SourceBranchName'], variables['masterBranchName'])
              )

            steps:
              - script: echo build on UAT succeeded!!!


            
            

  





